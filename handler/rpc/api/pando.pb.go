// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: pando.proto

package api

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextCursor string `protobuf:"bytes,1,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool   `protobuf:"varint,2,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{0}
}

func (x *Pagination) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *Pagination) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Symbol  string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Logo    string `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
	ChainId string `protobuf:"bytes,5,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Chain   *Asset `protobuf:"bytes,6,opt,name=chain,proto3" json:"chain,omitempty"`
	Price   string `protobuf:"bytes,7,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{1}
}

func (x *Asset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Asset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Asset) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Asset) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Asset) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *Asset) GetChain() *Asset {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *Asset) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type Collateral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Name      string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Gem       string                 `protobuf:"bytes,4,opt,name=gem,proto3" json:"gem,omitempty"`
	Dai       string                 `protobuf:"bytes,5,opt,name=dai,proto3" json:"dai,omitempty"`
	Ink       string                 `protobuf:"bytes,6,opt,name=ink,proto3" json:"ink,omitempty"`
	Art       string                 `protobuf:"bytes,7,opt,name=art,proto3" json:"art,omitempty"`
	Rate      string                 `protobuf:"bytes,8,opt,name=rate,proto3" json:"rate,omitempty"`
	Rho       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=rho,proto3" json:"rho,omitempty"`
	Debt      string                 `protobuf:"bytes,10,opt,name=debt,proto3" json:"debt,omitempty"`
	Line      string                 `protobuf:"bytes,11,opt,name=line,proto3" json:"line,omitempty"`
	Dust      string                 `protobuf:"bytes,12,opt,name=dust,proto3" json:"dust,omitempty"`
	Price     string                 `protobuf:"bytes,13,opt,name=price,proto3" json:"price,omitempty"`
	Mat       string                 `protobuf:"bytes,14,opt,name=mat,proto3" json:"mat,omitempty"`
	Duty      string                 `protobuf:"bytes,15,opt,name=duty,proto3" json:"duty,omitempty"`
	Chop      string                 `protobuf:"bytes,16,opt,name=chop,proto3" json:"chop,omitempty"`
	Dunk      string                 `protobuf:"bytes,17,opt,name=dunk,proto3" json:"dunk,omitempty"`
	Live      bool                   `protobuf:"varint,18,opt,name=live,proto3" json:"live,omitempty"`
}

func (x *Collateral) Reset() {
	*x = Collateral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collateral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collateral) ProtoMessage() {}

func (x *Collateral) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collateral.ProtoReflect.Descriptor instead.
func (*Collateral) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{2}
}

func (x *Collateral) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Collateral) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Collateral) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Collateral) GetGem() string {
	if x != nil {
		return x.Gem
	}
	return ""
}

func (x *Collateral) GetDai() string {
	if x != nil {
		return x.Dai
	}
	return ""
}

func (x *Collateral) GetInk() string {
	if x != nil {
		return x.Ink
	}
	return ""
}

func (x *Collateral) GetArt() string {
	if x != nil {
		return x.Art
	}
	return ""
}

func (x *Collateral) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *Collateral) GetRho() *timestamppb.Timestamp {
	if x != nil {
		return x.Rho
	}
	return nil
}

func (x *Collateral) GetDebt() string {
	if x != nil {
		return x.Debt
	}
	return ""
}

func (x *Collateral) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *Collateral) GetDust() string {
	if x != nil {
		return x.Dust
	}
	return ""
}

func (x *Collateral) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Collateral) GetMat() string {
	if x != nil {
		return x.Mat
	}
	return ""
}

func (x *Collateral) GetDuty() string {
	if x != nil {
		return x.Duty
	}
	return ""
}

func (x *Collateral) GetChop() string {
	if x != nil {
		return x.Chop
	}
	return ""
}

func (x *Collateral) GetDunk() string {
	if x != nil {
		return x.Dunk
	}
	return ""
}

func (x *Collateral) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

type Vault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CollateralId string                 `protobuf:"bytes,3,opt,name=collateral_id,json=collateralId,proto3" json:"collateral_id,omitempty"`
	Ink          string                 `protobuf:"bytes,4,opt,name=ink,proto3" json:"ink,omitempty"`
	Art          string                 `protobuf:"bytes,5,opt,name=art,proto3" json:"art,omitempty"`
}

func (x *Vault) Reset() {
	*x = Vault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vault) ProtoMessage() {}

func (x *Vault) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vault.ProtoReflect.Descriptor instead.
func (*Vault) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{3}
}

func (x *Vault) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vault) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Vault) GetCollateralId() string {
	if x != nil {
		return x.CollateralId
	}
	return ""
}

func (x *Vault) GetInk() string {
	if x != nil {
		return x.Ink
	}
	return ""
}

func (x *Vault) GetArt() string {
	if x != nil {
		return x.Art
	}
	return ""
}

type Flip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Tic          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=tic,proto3" json:"tic,omitempty"`
	End          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	Ended        bool                   `protobuf:"varint,5,opt,name=ended,proto3" json:"ended,omitempty"`
	Settled      bool                   `protobuf:"varint,6,opt,name=settled,proto3" json:"settled,omitempty"`
	Bid          string                 `protobuf:"bytes,7,opt,name=bid,proto3" json:"bid,omitempty"`
	Lot          string                 `protobuf:"bytes,8,opt,name=lot,proto3" json:"lot,omitempty"`
	Tab          string                 `protobuf:"bytes,9,opt,name=tab,proto3" json:"tab,omitempty"`
	CollateralId string                 `protobuf:"bytes,10,opt,name=collateral_id,json=collateralId,proto3" json:"collateral_id,omitempty"`
	VaultId      string                 `protobuf:"bytes,11,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	Guy          string                 `protobuf:"bytes,12,opt,name=Guy,proto3" json:"Guy,omitempty"`
}

func (x *Flip) Reset() {
	*x = Flip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flip) ProtoMessage() {}

func (x *Flip) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flip.ProtoReflect.Descriptor instead.
func (*Flip) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{4}
}

func (x *Flip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Flip) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Flip) GetTic() *timestamppb.Timestamp {
	if x != nil {
		return x.Tic
	}
	return nil
}

func (x *Flip) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Flip) GetEnded() bool {
	if x != nil {
		return x.Ended
	}
	return false
}

func (x *Flip) GetSettled() bool {
	if x != nil {
		return x.Settled
	}
	return false
}

func (x *Flip) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *Flip) GetLot() string {
	if x != nil {
		return x.Lot
	}
	return ""
}

func (x *Flip) GetTab() string {
	if x != nil {
		return x.Tab
	}
	return ""
}

func (x *Flip) GetCollateralId() string {
	if x != nil {
		return x.CollateralId
	}
	return ""
}

func (x *Flip) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *Flip) GetGuy() string {
	if x != nil {
		return x.Guy
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TargetId  string                 `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	AssetId   string                 `protobuf:"bytes,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Amount    string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Action    int32                  `protobuf:"varint,6,opt,name=action,proto3" json:"action,omitempty"`
	Status    int32                  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Data      string                 `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{5}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transaction) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Transaction) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Transaction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Transaction) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *Transaction) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Transaction) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req) Reset() {
	*x = Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6}
}

type Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Resp) Reset() {
	*x = Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp) ProtoMessage() {}

func (x *Resp) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp.ProtoReflect.Descriptor instead.
func (*Resp) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7}
}

type Req_ReadAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Req_ReadAsset) Reset() {
	*x = Req_ReadAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ReadAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ReadAsset) ProtoMessage() {}

func (x *Req_ReadAsset) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ReadAsset.ProtoReflect.Descriptor instead.
func (*Req_ReadAsset) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Req_ReadAsset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Req_ListAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req_ListAssets) Reset() {
	*x = Req_ListAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListAssets) ProtoMessage() {}

func (x *Req_ListAssets) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListAssets.ProtoReflect.Descriptor instead.
func (*Req_ListAssets) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 1}
}

// List All Collaterals
type Req_ListCollaterals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req_ListCollaterals) Reset() {
	*x = Req_ListCollaterals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListCollaterals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListCollaterals) ProtoMessage() {}

func (x *Req_ListCollaterals) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListCollaterals.ProtoReflect.Descriptor instead.
func (*Req_ListCollaterals) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 2}
}

// Find Collateral By TraceID
type Req_FindCollateral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Req_FindCollateral) Reset() {
	*x = Req_FindCollateral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindCollateral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindCollateral) ProtoMessage() {}

func (x *Req_FindCollateral) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindCollateral.ProtoReflect.Descriptor instead.
func (*Req_FindCollateral) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 3}
}

func (x *Req_FindCollateral) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// List All Vaults
type Req_ListVaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req_ListVaults) Reset() {
	*x = Req_ListVaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListVaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListVaults) ProtoMessage() {}

func (x *Req_ListVaults) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListVaults.ProtoReflect.Descriptor instead.
func (*Req_ListVaults) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 4}
}

type Req_FindVault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Req_FindVault) Reset() {
	*x = Req_FindVault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindVault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindVault) ProtoMessage() {}

func (x *Req_FindVault) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindVault.ProtoReflect.Descriptor instead.
func (*Req_FindVault) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 5}
}

func (x *Req_FindVault) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Req_FindFlip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Req_FindFlip) Reset() {
	*x = Req_FindFlip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindFlip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindFlip) ProtoMessage() {}

func (x *Req_FindFlip) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindFlip.ProtoReflect.Descriptor instead.
func (*Req_FindFlip) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 6}
}

func (x *Req_FindFlip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Req_ListFlips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Req_ListFlips) Reset() {
	*x = Req_ListFlips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListFlips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListFlips) ProtoMessage() {}

func (x *Req_ListFlips) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListFlips.ProtoReflect.Descriptor instead.
func (*Req_ListFlips) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 7}
}

func (x *Req_ListFlips) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *Req_ListFlips) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Find Tx By FollowID
type Req_FindTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Follow string `protobuf:"bytes,1,opt,name=follow,proto3" json:"follow,omitempty"`
}

func (x *Req_FindTransaction) Reset() {
	*x = Req_FindTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindTransaction) ProtoMessage() {}

func (x *Req_FindTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindTransaction.ProtoReflect.Descriptor instead.
func (*Req_FindTransaction) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 8}
}

func (x *Req_FindTransaction) GetFollow() string {
	if x != nil {
		return x.Follow
	}
	return ""
}

type Req_ListTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Target string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Req_ListTransactions) Reset() {
	*x = Req_ListTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListTransactions) ProtoMessage() {}

func (x *Req_ListTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListTransactions.ProtoReflect.Descriptor instead.
func (*Req_ListTransactions) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 9}
}

func (x *Req_ListTransactions) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *Req_ListTransactions) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Req_ListTransactions) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Resp_ListAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *Resp_ListAssets) Reset() {
	*x = Resp_ListAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListAssets) ProtoMessage() {}

func (x *Resp_ListAssets) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListAssets.ProtoReflect.Descriptor instead.
func (*Resp_ListAssets) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Resp_ListAssets) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type Resp_ListCollaterals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collaterals []*Collateral `protobuf:"bytes,1,rep,name=collaterals,proto3" json:"collaterals,omitempty"`
}

func (x *Resp_ListCollaterals) Reset() {
	*x = Resp_ListCollaterals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListCollaterals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListCollaterals) ProtoMessage() {}

func (x *Resp_ListCollaterals) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListCollaterals.ProtoReflect.Descriptor instead.
func (*Resp_ListCollaterals) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Resp_ListCollaterals) GetCollaterals() []*Collateral {
	if x != nil {
		return x.Collaterals
	}
	return nil
}

type Resp_ListVaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vaults []*Vault `protobuf:"bytes,1,rep,name=vaults,proto3" json:"vaults,omitempty"`
}

func (x *Resp_ListVaults) Reset() {
	*x = Resp_ListVaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListVaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListVaults) ProtoMessage() {}

func (x *Resp_ListVaults) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListVaults.ProtoReflect.Descriptor instead.
func (*Resp_ListVaults) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 2}
}

func (x *Resp_ListVaults) GetVaults() []*Vault {
	if x != nil {
		return x.Vaults
	}
	return nil
}

type Resp_ListFlips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flips      []*Flip     `protobuf:"bytes,1,rep,name=flips,proto3" json:"flips,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *Resp_ListFlips) Reset() {
	*x = Resp_ListFlips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListFlips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListFlips) ProtoMessage() {}

func (x *Resp_ListFlips) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListFlips.ProtoReflect.Descriptor instead.
func (*Resp_ListFlips) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 3}
}

func (x *Resp_ListFlips) GetFlips() []*Flip {
	if x != nil {
		return x.Flips
	}
	return nil
}

func (x *Resp_ListFlips) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Resp_ListTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Pagination   *Pagination    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *Resp_ListTransactions) Reset() {
	*x = Resp_ListTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListTransactions) ProtoMessage() {}

func (x *Resp_ListTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListTransactions.ProtoReflect.Descriptor instead.
func (*Resp_ListTransactions) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 4}
}

func (x *Resp_ListTransactions) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Resp_ListTransactions) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_pando_proto protoreflect.FileDescriptor

var file_pando_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66,
	0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x48, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x05,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xa9, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x67, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x69, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x72,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x03, 0x72, 0x68, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x72, 0x68, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x62, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x62, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x75, 0x73, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x75, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x75, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x75, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x6f, 0x70, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x75,
	0x6e, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x75, 0x6e, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x69,
	0x76, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6e, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x74,
	0x22, 0xe5, 0x02, 0x0a, 0x04, 0x46, 0x6c, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x74,
	0x69, 0x63, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x6f, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x61, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x75, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x75, 0x79, 0x22, 0xec, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xec, 0x02, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x0c, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x11, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x1a, 0x20, 0x0a,
	0x0e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a,
	0x0c, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x1b, 0x0a,
	0x09, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x1a, 0x0a, 0x08, 0x46, 0x69,
	0x6e, 0x64, 0x46, 0x6c, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x39, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c,
	0x69, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x1a, 0x29, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x1a, 0x58, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xed, 0x03, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x1a,
	0x3e, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x30, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x1a,
	0x52, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61,
	0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x30, 0x0a, 0x06, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x1a, 0x79, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x73,
	0x12, 0x2d, 0x0a, 0x05, 0x66, 0x6c, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x6c, 0x69, 0x70, 0x52, 0x05, 0x66, 0x6c, 0x69, 0x70, 0x73, 0x12,
	0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x95,
	0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6f, 0x78, 0x2e,
	0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xd9, 0x06, 0x0a, 0x05, 0x50, 0x61, 0x6e, 0x64, 0x6f,
	0x12, 0x47, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x20, 0x2e,
	0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x1a,
	0x18, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x53, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61,
	0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x22, 0x2e, 0x66, 0x6f, 0x78,
	0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x62,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x73, 0x12, 0x26, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x1a, 0x27, 0x2e, 0x66, 0x6f, 0x78, 0x2e,
	0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x73, 0x12, 0x56, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x12, 0x25, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x1a, 0x1d, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x53, 0x0a, 0x0a, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70,
	0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x22, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x47, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x2e, 0x66,
	0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0x18,
	0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64,
	0x46, 0x6c, 0x69, 0x70, 0x12, 0x1f, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x46, 0x6c, 0x69, 0x70, 0x1a, 0x17, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6c, 0x69, 0x70, 0x12, 0x50,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x73, 0x12, 0x20, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x73, 0x1a, 0x21, 0x2e,
	0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x73,
	0x12, 0x59, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1e, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x27, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x28, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70,
	0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pando_proto_rawDescOnce sync.Once
	file_pando_proto_rawDescData = file_pando_proto_rawDesc
)

func file_pando_proto_rawDescGZIP() []byte {
	file_pando_proto_rawDescOnce.Do(func() {
		file_pando_proto_rawDescData = protoimpl.X.CompressGZIP(file_pando_proto_rawDescData)
	})
	return file_pando_proto_rawDescData
}

var file_pando_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_pando_proto_goTypes = []interface{}{
	(*Pagination)(nil),            // 0: fox.pando.service.Pagination
	(*Asset)(nil),                 // 1: fox.pando.service.Asset
	(*Collateral)(nil),            // 2: fox.pando.service.Collateral
	(*Vault)(nil),                 // 3: fox.pando.service.Vault
	(*Flip)(nil),                  // 4: fox.pando.service.Flip
	(*Transaction)(nil),           // 5: fox.pando.service.Transaction
	(*Req)(nil),                   // 6: fox.pando.service.Req
	(*Resp)(nil),                  // 7: fox.pando.service.Resp
	(*Req_ReadAsset)(nil),         // 8: fox.pando.service.Req.ReadAsset
	(*Req_ListAssets)(nil),        // 9: fox.pando.service.Req.ListAssets
	(*Req_ListCollaterals)(nil),   // 10: fox.pando.service.Req.ListCollaterals
	(*Req_FindCollateral)(nil),    // 11: fox.pando.service.Req.FindCollateral
	(*Req_ListVaults)(nil),        // 12: fox.pando.service.Req.ListVaults
	(*Req_FindVault)(nil),         // 13: fox.pando.service.Req.FindVault
	(*Req_FindFlip)(nil),          // 14: fox.pando.service.Req.FindFlip
	(*Req_ListFlips)(nil),         // 15: fox.pando.service.Req.ListFlips
	(*Req_FindTransaction)(nil),   // 16: fox.pando.service.Req.FindTransaction
	(*Req_ListTransactions)(nil),  // 17: fox.pando.service.Req.ListTransactions
	(*Resp_ListAssets)(nil),       // 18: fox.pando.service.Resp.ListAssets
	(*Resp_ListCollaterals)(nil),  // 19: fox.pando.service.Resp.ListCollaterals
	(*Resp_ListVaults)(nil),       // 20: fox.pando.service.Resp.ListVaults
	(*Resp_ListFlips)(nil),        // 21: fox.pando.service.Resp.ListFlips
	(*Resp_ListTransactions)(nil), // 22: fox.pando.service.Resp.ListTransactions
	(*timestamppb.Timestamp)(nil), // 23: google.protobuf.Timestamp
}
var file_pando_proto_depIdxs = []int32{
	1,  // 0: fox.pando.service.Asset.chain:type_name -> fox.pando.service.Asset
	23, // 1: fox.pando.service.Collateral.created_at:type_name -> google.protobuf.Timestamp
	23, // 2: fox.pando.service.Collateral.rho:type_name -> google.protobuf.Timestamp
	23, // 3: fox.pando.service.Vault.created_at:type_name -> google.protobuf.Timestamp
	23, // 4: fox.pando.service.Flip.created_at:type_name -> google.protobuf.Timestamp
	23, // 5: fox.pando.service.Flip.tic:type_name -> google.protobuf.Timestamp
	23, // 6: fox.pando.service.Flip.end:type_name -> google.protobuf.Timestamp
	23, // 7: fox.pando.service.Transaction.created_at:type_name -> google.protobuf.Timestamp
	1,  // 8: fox.pando.service.Resp.ListAssets.assets:type_name -> fox.pando.service.Asset
	2,  // 9: fox.pando.service.Resp.ListCollaterals.collaterals:type_name -> fox.pando.service.Collateral
	3,  // 10: fox.pando.service.Resp.ListVaults.vaults:type_name -> fox.pando.service.Vault
	4,  // 11: fox.pando.service.Resp.ListFlips.flips:type_name -> fox.pando.service.Flip
	0,  // 12: fox.pando.service.Resp.ListFlips.pagination:type_name -> fox.pando.service.Pagination
	5,  // 13: fox.pando.service.Resp.ListTransactions.transactions:type_name -> fox.pando.service.Transaction
	0,  // 14: fox.pando.service.Resp.ListTransactions.pagination:type_name -> fox.pando.service.Pagination
	8,  // 15: fox.pando.service.Pando.ReadAsset:input_type -> fox.pando.service.Req.ReadAsset
	9,  // 16: fox.pando.service.Pando.ListAssets:input_type -> fox.pando.service.Req.ListAssets
	10, // 17: fox.pando.service.Pando.ListCollaterals:input_type -> fox.pando.service.Req.ListCollaterals
	11, // 18: fox.pando.service.Pando.FindCollateral:input_type -> fox.pando.service.Req.FindCollateral
	12, // 19: fox.pando.service.Pando.ListVaults:input_type -> fox.pando.service.Req.ListVaults
	13, // 20: fox.pando.service.Pando.FindVault:input_type -> fox.pando.service.Req.FindVault
	14, // 21: fox.pando.service.Pando.FindFlip:input_type -> fox.pando.service.Req.FindFlip
	15, // 22: fox.pando.service.Pando.ListFlips:input_type -> fox.pando.service.Req.ListFlips
	16, // 23: fox.pando.service.Pando.FindTransaction:input_type -> fox.pando.service.Req.FindTransaction
	17, // 24: fox.pando.service.Pando.ListTransactions:input_type -> fox.pando.service.Req.ListTransactions
	1,  // 25: fox.pando.service.Pando.ReadAsset:output_type -> fox.pando.service.Asset
	18, // 26: fox.pando.service.Pando.ListAssets:output_type -> fox.pando.service.Resp.ListAssets
	19, // 27: fox.pando.service.Pando.ListCollaterals:output_type -> fox.pando.service.Resp.ListCollaterals
	2,  // 28: fox.pando.service.Pando.FindCollateral:output_type -> fox.pando.service.Collateral
	20, // 29: fox.pando.service.Pando.ListVaults:output_type -> fox.pando.service.Resp.ListVaults
	3,  // 30: fox.pando.service.Pando.FindVault:output_type -> fox.pando.service.Vault
	4,  // 31: fox.pando.service.Pando.FindFlip:output_type -> fox.pando.service.Flip
	21, // 32: fox.pando.service.Pando.ListFlips:output_type -> fox.pando.service.Resp.ListFlips
	5,  // 33: fox.pando.service.Pando.FindTransaction:output_type -> fox.pando.service.Transaction
	22, // 34: fox.pando.service.Pando.ListTransactions:output_type -> fox.pando.service.Resp.ListTransactions
	25, // [25:35] is the sub-list for method output_type
	15, // [15:25] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_pando_proto_init() }
func file_pando_proto_init() {
	if File_pando_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pando_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collateral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ReadAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListCollaterals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindCollateral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListVaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindVault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindFlip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListFlips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListCollaterals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListVaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListFlips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pando_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pando_proto_goTypes,
		DependencyIndexes: file_pando_proto_depIdxs,
		MessageInfos:      file_pando_proto_msgTypes,
	}.Build()
	File_pando_proto = out.File
	file_pando_proto_rawDesc = nil
	file_pando_proto_goTypes = nil
	file_pando_proto_depIdxs = nil
}
